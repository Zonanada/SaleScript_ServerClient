{"version":3,"sources":["components/Start.jsx","components/Mail.jsx","components/Welcom.jsx","components/MissionCall.jsx","components/DefinitionNeed.jsx","components/SelectionSaleProduсt.jsx","components/UseMiting.jsx","components/UseMitingPickUp.jsx","components/UseMitingPickUpOffline.jsx","components/UseMitingPickUpOfflineOurOffice.jsx","components/UseMitingPickUpOfflineСlientOffice.jsx","components/UseMitingPickUpOfflineNoMatterWhere.jsx","components/UseMitingPickUpOnline.jsx","components/UseMitingPickUpNoMatterWhere.jsx","components/UseMitingProductPresentation.jsx","components/UseMitingProductPresentationOffline.jsx","components/UseMitingProductPresentationOfflineOurOffice.jsx","components/UseMitingProductPresentationOfflineClientOffice.jsx","components/UseMitingProductPresentationOfflineNoMatterWhere.jsx","components/UseMitingProductPresentationOnline.jsx","components/UseMitingProductPresentationNoMatterWhere.jsx","components/SendingCommercialOffer.jsx","components/Finish.jsx","components/Bye.jsx","components/EmptyLine.jsx","components/Password.jsx","App.js","index.js"],"names":["Start","react_default","a","createElement","className","ScriptConstructor","props","typeof","id","contentEditable","mail","Welcom","welcom","position","form","title","MissionCall","missionCall","type","name","value","defaultChecked","DefinitionNeed","definitionNeed","need","readyTime","meetingTime","SelectionSaleProduct","selectionSaleProduct","stagesOfRegistration","UseMiting","UseMitingPickUp","UseMitingPickUpOffline","UseMitingPickUpOfflineOurOffice","useMitingPickUpOfflineOurOffice","officeAdress","UseMitingPickUpOfflineСlientOffice","useMitingPickUpOfflineСlientOffice","UseMitingPickUpOfflineNoMatterWhere","useMitingPickUpOfflineNoMatterWhere","UseMitingPickUpOnline","useMitingPickUpOnline","communicationApp","UseMitingPickUpNoMatterWhere","useMitingPickUpNoMatterWhere","UseMitingProductPresentation","UseMitingProductPresentationOffline","UseMitingProductPresentationOfflineOurOffice","useMitingProductPresentationOfflineOurOffice","UseMitingProductPresentationOfflineClientOffice","useMitingProductPresentationOfflineClientOffice","UseMitingProductPresentationOfflineNoMatterWhere","useMitingProductPresentationOfflineNoMatterWhere","UseMitingProductPresentationOnline","useMitingProductPresentationOnline","UseMitingProductPresentationNoMatterWhere","useMitingProductPresentationNoMatterWhere","SendingCommercialOffer","sendingCommercialOffer","Finish","Bye","EmptyLine","empty","Password","incorrect","dataScript","App","_useState","useState","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","history","setHistory","_useState5","_useState6","further","setFurther","_useState7","_useState8","fillInInput","setfillInInput","_useState9","_useState10","corPassword","setPassword","emptyInput","_useState11","_useState12","setMail","_useState13","_useState14","setWelcom","_useState15","_useState16","setMissionCall","_useState17","_useState18","setDefinitionNeed","_useState19","_useState20","selectionSaleProduсt","setSelectionSaleProduсt","_useState21","_useState22","setUseMitingPickUpOfflineOurOffice","_useState23","_useState24","setUseMitingPickUpOfflineСlientOffice","_useState25","_useState26","setUseMitingPickUpOfflineNoMatterWhere","_useState27","_useState28","setUseMitingPickUpOnline","_useState29","_useState30","setUseMitingPickUpNoMatterWhere","_useState31","_useState32","setUseMitingProductPresentationOfflineOurOffice","_useState33","_useState34","setUseMitingProductPresentationOfflineClientOffice","_useState35","_useState36","setUseMitingProductPresentationNoMatterWhere","_useState37","_useState38","setUseMitingProductPresentationOnline","_useState39","_useState40","setUseMitingProductPresentationOfflineNoMatterWhere","_useState41","_useState42","setSendingCommercialOffer","pushHistory","copy","assign","push","pushData","inputDiv","document","querySelectorAll","i","length","innerText","inputArr","checked","activity","monitoringState","index_modern_default","url","components_Welcom","sample","components_DefinitionNeed","SelectionSaleProdu_t","components_UseMiting","components_UseMitingPickUp","components_UseMitingPickUpOffline","components_UseMitingPickUpOfflineOurOffice","UseMitingPickUpOffline_lientOffice","components_UseMitingPickUpOfflineNoMatterWhere","components_UseMitingPickUpOnline","components_UseMitingPickUpNoMatterWhere","components_UseMitingProductPresentation","components_UseMitingProductPresentationOffline","components_UseMitingProductPresentationOfflineOurOffice","components_UseMitingProductPresentationOfflineClientOffice","components_UseMitingProductPresentationOfflineNoMatterWhere","components_UseMitingProductPresentationOnline","components_UseMitingProductPresentationNoMatterWhere","components_SendingCommercialOffer","components_Finish","components_Bye","console","log","createElements","components_EmptyLine","onClick","pop","window","scrollTo","emptyIput","getElementsByName","classList","add","password","mission","aimMeeteng","meetingFormat","meetingOption","btn","querySelector","firstChild","removeChild","delBtn","fetch","method","headers","Content-Type","body","JSON","stringify","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.5141f007.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Start() {\n  return (\n    <div className='childRoot'>\n      <div className='noBorder'>\n        <h1>Конструктор скрипта</h1>\n        <p>Привет! Ты заполняешь все разделы, мы присылаем готовый скрипт!\n          Всё просто, вперёд!\n        </p>\n        \n      </div>\n    </div>\n\n  )\n}\n","import React from 'react'\n\nexport default function ScriptConstructor(props) {\n  return (\n    <div className='childRoot'>\n      <div className='border'>\n        <p>Электронная почта</p>\n        <div className='input' typeof='text' id='mail' contentEditable=\"true\">{props.mail}</div>\n      </div>\n    </div>\n\n  )\n}\n","import React from 'react'\n\nfunction Welcom(props) {\n    return (\n        <div className='childRoot'>\n            <h1>Приветствие</h1>\n            <div className='border'>\n                <p>Напишите должность сотрудника, который звонит</p>\n                <p className='example'>\n                    <p>\n                        <span className='fatty'>Например:</span>\n                    </p> \n                    <p>\n                        Менеджер, специалист, администратор. Пишем должность с маленькой буквы. Точку в конце не ставим.\n                    </p>   \n                    </p>\n                <div className='input' id=\"position\" contentEditable=\"true\">{props.welcom.position}</div>\n            </div>\n            <div className='border'>\n                <p>Напишите форму вашей организации</p>\n                <p className='example'>\n                <p>\n                    <span className='fatty'>Например:</span> \n                </p>\n                <p>\n                    Компании, салона красоты, юридической фирмы. Пишем в родительном падеже с маленькой буквы. Точку в конце не ставим.\n                </p>\n                </p>\n                <div className='input' id=\"form\" contentEditable=\"true\">{props.welcom.form}</div>\n            </div>\n            <div className='border'>\n                <p>Напишите название вашей организации</p>\n                <div className=\"example\">\n                    <p><span className='fatty'>\n                        Например:</span>\n                    </p>\n                    <p>\n                        \"Стомата\", \"Телекомпром\", \"Пушка\". Точку в конце не ставим.\n                    </p>\n                </div>\n                <div className='input' id=\"title\" contentEditable=\"true\">{props.welcom.title}</div>\n            </div>\n\n        </div>\n\n\n    )\n}\n\nexport default Welcom","import React from 'react'\n\nexport default function MissionCall(props) {\n  return (\n    <div className='childRoot'>\n      <h1>Цель звонка</h1>\n      <div className='border'>\n        <p>\n          Напишите коротко о деятельности вашей организации и о том реальном преимуществе, которое вы имеете в сравнении с конкурентами\n        </p>\n        <p className='comment'>\n          <p><span className='fatty'>Комментарий:</span></p>\n          <p>\n            Помните, количество времени клиента в холодном звонке ограничено для вас. Как только он понял, что вы хотите ему что-то продать, его сознание сразу выставляет защиту и спешит завершить с вами разговор. \n          <br/>Поэтому самое главное в холодном звонке - как можно быстрее заинтересовать клиента, чтобы иметь возможность продолжить разговор. \n          <br/>Таким образом, нам необходимо, с первых секунд дать понять клиенту, что у нас есть то, что ему нужно. \n          </p>\n          <p>\n            Как быстро дать понять клиенту, что у нас есть то, что ему нужно? \n          </p>\n          <p>\n            Каждый звонок клиенту по холоду предполагает короткий рассказ о компании - нам же важно дать понять клиенту кто мы и с какой целью звоним.  \n          <br/>Именно в эту часть мы вставляем самое главное преимущество, которое отличает нас от конкурентов и решает самую главную боль клиента. Ну а там, где преимущество, есть и выгода, которую мы, также, озвучиваем.  \n          <br/>Ходим сразу с козырей.\n          </p>\n          <p>\n            Как правильно составить короткий рассказ о компании с использованием преимущества и выгоды?\n          </p>\n          <p>\n            Помним, что основная задача, как можно скорее обозначить клиенту его основную выгоду, чтобы иметь возможность продолжить разговор.  \n            <br/>Поэтому для представления компании, обозначения преимущества и выгоды мы используем по одному предложению на каждый тезис. Допускается два преимущества в одном предложении через союз “и”. То же самое с выгодой.\n          </p>\n          <p>\n            Как правильно сформулировать описание вашей компании?\n          </p>\n          <p>\n            Самое главное правило - пишите коротко и по сути. Не пишите больше одного предложения о компании.  \n          <br/>Помните, на данном этапе, вы еще не интерсны клиенту настолько, чтобы он тратил на вас свое время. Не переживайте, если все пройдет успешно, у вас будет возможность рассказать о себе подробнее, но позже.  \n          <br/>Предложение о компании можно начать с фразы “Мы занимаемся”, “Наша компания занимается”, “Мы специализируемся на”.  \n          <br/>Несколько примеров: \n          </p>\n\n          <p>\n            - мы занимаемся помощью в развитии компаний, которые ведут свой бизнес в интернете \n            <br/>- наша компания занимается подбором, продажей и установкой кондиционеров \n            <br/>- мы специализируемся на консультировании граждан по вопросам банкротства физических лиц \n          </p>\n\n          <p>\n            Как правильно сформулировать преимущество для клиента?\n          </p>\n\n          <p>\n            Вам необходимо вспомнить в чем именно заключается основная боль клиента в вашем направлении бизнеса. Несколько примеров: \n          </p>\n\n          <p>\n            <br/>- не фиксированная цена, которая не дает возможность клиенту планировать ремонт \n            <br/>- сроки, которые постоянно нарушают ваши конкуренты \n            <br/>- отсутствие гарантий у большинства представителей вашей ниши\n          </p>\n\n          <p>\n            Ваша задача написать то преимущество, которое моментально даст понять клиенту, что вы знаете о его самой главной проблеме и способны ее решить.  \n            <br/>Предложение о преимуществе можно начать с фразы “Основная наша особенность”, “Основное наше отличие”, “Основное наше преимущество в том, что”. \n          </p>\n\n          <p>Как правильно сформулировать выгоду для клиента?</p>\n\n          <p>\n            Преимущество озвучено, но сразу нужно проговорить и выгоду, которую клиент получит.  \n            <br/>По сути, выгода это то, что получает клиент, воспользовавшись вашим преимуществом. \n            <br/>Преимущество и выгода тесно связаны логической цепочкой - выгода формируется исходя из преимущества. \n            <br/>Соединим вышеупомянутые преимущества и выгоды для примера: \n          </p>\n\n          <p>\n            - фиксированная цена работ (преимущество) даст возможность клиенту избежать незапланированных трат (выгода) \n            <br/>- конкретные сроки выполнения работ (преимущество) позволяют клиенту вовремя заселиться в новую квартиру и не тратить деньги на съемную (выгода) \n            <br/>- наличие гарантии на работы (преимущество) дает клиенту уверенность в том, что его не бросят в сложной ситуации и помогут бесплатно (выгода) \n          </p>\n\n          <p>\n            Предложение о выгоде можно начать с фразы “Поэтому вы получите”, “Поэтому вы будете иметь”, “Поэтому вам не придется”. \n          </p>\n\n          <p>\n            Помните, то чем вы занимаетесь, ваше основное преимущество и выгода должны быть написаны коротко и по сути.  \n            <br/>Не пишите подробный рассказ о вас и не перечисляйте все преимущества и выгоды, которые у вас есть. Только основное и и только самое главное. \n            <br/>Пример готового текста данного блока представлен ниже после всего комментария. \n          </p>\n\n\n        </p>\n        <p className='example'>\n          <p><span className='fatty'>Например:</span></p>\n          <p>\n            Мы занимаемся предоставлением пропусков для грузовых автомобилей в Москву.\n            Взаимодействуя напрямую с департаментом транспорта, имеем очень быстрое оформление и высокую степень одобрения 99%.\n            Поэтому наши клиенты не теряют деньги в ожидании пропусков.\n          </p>\n        </p>\n        <div className='input' id=\"activity\" contentEditable=\"true\">{props.missionCall}</div>\n      </div>\n      <div className='border'>\n        <p>Напишите цель данного звонка</p>\n        <div><input type=\"radio\" name=\"mission\" value='Выявление потребностей (перед звонком с презентацией продукта)' defaultChecked />Выявление потребностей перед звонком с презентацией продукта</div>\n        <div><input type=\"radio\" name=\"mission\" value='Подбор и продажа продукта (здесь и сейчас)' />Подбор и продажа продукта здесь и сейчас</div>\n        <div><input type=\"radio\" name=\"mission\" value='Назначение встречи (знакомство или презентация продукта)' />Назначение встречи для знакомства или презентации продукта</div>\n        <div><input type=\"radio\" name=\"mission\" value='Отправка коммерческого предложения (здесь и сейчас)' />Отправка коммерческого предложения здесь и сейчас</div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nfunction DefinitionNeed(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Выявление потребностей перед звонком с презенацией продукта</h1>\n        <div className='border'>\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n              Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n\n              <p>\n              Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              \n              <p>\n              Как повысить вероятность продажи?\n              </p>\n\n              <p>\n              Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n\n              <p>Как узнать что хочет клиент?</p>\n\n              <p>Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.</p>\n\n              <p>Как задать правильные вопросы?</p>\n\n              <p>\n              Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д. \n              <br/>Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n\n              </p>\n\n            </p>\n            \n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n               Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.definitionNeed.need}</div>\n        </div>\n        <div className='border'>\n            <p>Напишите в течение какого количества дней ваше предложение будет готово для клиента</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n              Важно точно обозначить сколько времени вам потребуется на подготовку предложения. Сама фраза говорит клиенту о том, что вы будете тратить свое время на подбор продукта для него. \n              <br/>Таким образом, это возлагает некоторую ответственность на клиента, как минимум, взять трубку в следующий раз и выслушать вас. Также, важно, чтобы ваше предложение было готово как можно быстрее.\n              <br/>Помните, время между звонками должно быть максимально короткое, иначе клиента может перехватить конкурент.\n              </p>\n            </p>\n            <p className='example'>\n                <p>\n                <span className='fatty'>Например:</span>\n                </p>\n                <p>1 день</p>\n                </p>\n            <div className='input' id=\"readyTime\" contentEditable=\"true\">{props.definitionNeed.readyTime}</div>\n\n        </div>\n        <div className='border'>\n            <p>Напишите сколько времени вам с клиентом понадобится на обсуждение предложения на следующем звонке</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий</span></p>\n              <p>\n              Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n\n              </p>\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span></p>\n                <p>\n                  15 минут\n                </p>\n                </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.definitionNeed.meetingTime}</div>\n        </div>\n\n    </div>\n  )\n}\n\nexport default DefinitionNeed","import React from 'react'\n\nfunction SelectionSaleProduct(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Подбор и продажа продукта здесь и сейчас</h1>\n        <div className='border'>\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n              Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n\n              <p>\n              Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n\n              <p>\n              Как повысить вероятность продажи?\n              </p>\n\n              <p>\n              Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n\n              <p>\n              Как узнать что хочет клиент?\n              </p>\n\n              <p>\n              Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n\n              <p>Как задать правильные вопросы?</p>\n\n              <p>\n              Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д. \n              <br/>Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n\n              </p>\n\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.selectionSaleProduct.need}</div>\n        </div>\n        <div className='border'>\n            <p>Напишите последовательно все этапы оформления продукта после положительного решения клиента</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n\n              <p>   \n              Важно просто и понятно рассказать клиенту про то как будет выглядеть оформление и оплата в случае, если он примет положительное решение.\n              <br/>Сам вопрос - это некоторого рода программированием клиента на положительное решение. Вы еще не презентовали продукт, но уже говорите о том как происходит процесс оформления. \n              </p>\n\n              <p>\n              В каких-то сферах это будет оплата по интернету. Где-то нужно просто проговорить, что оплата будет после оказания услуг одним из удобных способов.\n              <br/>Так или иначе, для вас этот момент очень важен и его нужно обязательно озвучить.\n\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Сейчас я отправлю вам ссылку в Телеграм. Вам необходимо будет пройти по ней и нажать \"Купить\". После чего, ввести свои данные и данные вашей карты. Далее нажать кнопку \"Оплатить\"</p>\n            <div className='input' id=\"stagesOfRegistration\" contentEditable=\"true\">{props.selectionSaleProduct.stagesOfRegistration}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default SelectionSaleProduct","import React from 'react'\n\nfunction UseMiting() {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи</h1>\n        <div className='border'>\n            <p>Напишите цель встречи</p>\n            <div><input type=\"radio\" name='aimMeeteng' value='Знакомство' defaultChecked/>Знакомство</div>\n            <div><input type=\"radio\" name='aimMeeteng' value='Презентация продукта'/>Презентация продукта</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMiting","import React from 'react'\n\nfunction UseMitingPickUp() {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство</h1>\n        <div className='border'>\n            <p>Напишите формат встречи, который предполагается в вашей компании</p>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Offline' defaultChecked/>Offline</div>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Online'/>Online</div>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Формат встречи не имеет значения'/>Формат встречи не имеет значения</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUp","import React from 'react'\n\nfunction UseMitingPickUpOffline() {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Offline</h1>\n        <div className='border'>\n            <p>Напишите, какой вариант встречи возможен</p>\n            <div><input type=\"radio\" name='meetingOption' value='Наш офис' defaultChecked/>Наш офис</div>\n            <div><input type=\"radio\" name='meetingOption' value='Офис клиента' />Офис клиента</div>\n            <div><input type=\"radio\" name='meetingOption' value='Не важно где пройдёт встреча' />Не важно где пройдёт встреча</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpOffline","import React from 'react'\n\nfunction UseMitingPickUpOfflineOurOffice(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Offline. Наш офис</h1>\n        <div className='border'>\n            <p>Напишите адрес вашего офиса</p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                Невский проспект, дом 35, БЦ Атриум\n              </p>\n              </p>\n            <div className='input' id=\"officeAdress\" contentEditable=\"true\">{props.useMitingPickUpOfflineOurOffice.officeAdress}</div>\n        </div>\n        <div className='border'>\n            <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingPickUpOfflineOurOffice.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpOfflineOurOffice","import React from 'react'\n\nfunction UseMitingPickUpOfflineСlientOffice(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Offline. Офис клиента</h1>\n        <div className='border'>\n            <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p><span className='fatty'>Например:</span></p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingPickUpOfflineСlientOffice}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpOfflineСlientOffice","import React from 'react'\n\nfunction UseMitingPickUpOfflineNoMatterWhere(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Offline. Не важно где пройдет встреча</h1>\n        <div className='border'>\n            <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p><span className='fatty'>Например:</span></p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingPickUpOfflineNoMatterWhere}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpOfflineNoMatterWhere","import React from 'react'\n\nfunction UseMitingPickUpOnline(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Online</h1>\n        <div className='border'>\n            <p>Напишите какое приложение вы будете использовать для связи с клиентом</p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                Zoom, Google Meet, Skype\n              </p>\n              </p>\n            <div className='input' id=\"communicationApp\" contentEditable=\"true\">{props.useMitingPickUpOnline.communicationApp}</div>\n        </div>\n        <div className='border'>\n        <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p><span className='fatty'>Например:</span></p>\n               <p>\n                1 час\n               </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingPickUpOnline.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpOnline","import React from 'react'\n\nfunction UseMitingPickUpNoMatterWhere(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Знакомство. Формат встречи не имеет значения</h1>\n        <div className='border'>\n            <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p><span className='fatty'>Например:</span></p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingPickUpNoMatterWhere}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingPickUpNoMatterWhere","import React from 'react'\n\nfunction UseMitingProductPresentation() {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта</h1>\n        <div className='border'>\n            <p>Напишите формат встречи, который предполагается в вашей компании</p>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Offline'defaultChecked/>Offline</div>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Online'/>Online</div>\n            <div><input type=\"radio\" name=\"meetingFormat\" value='Формат встречи не имеет значения'/>Формат встречи не имеет значения</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentation","import React from 'react'\n\nfunction UseMitingProductPresentationOffline() {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Offline</h1>\n        <div className='border'>\n            <p>Напишите, какой вариант встречи возможен</p>\n            <div><input type=\"radio\" name='meetingOption' value='Наш офис' defaultChecked/>Наш офиc</div>\n            <div><input type=\"radio\" name='meetingOption' value='Офис клиента' />Офис клиента</div>\n            <div><input type=\"radio\" name='meetingOption' value='Не важно где пройдёт встреча' />Не важно где пройдёт встреча</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationOffline","import React from 'react'\n\nfunction UseMitingProductPresentationOfflineOurOffice(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Offline. Наш офис</h1>\n        <div className=\"border\">\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineOurOffice.need}</div>\n        </div>\n        <div className=\"border\">\n            <p>Напишите адрес вашего офиса</p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                Невский проспект, дом 35, БЦ Атриум\n              </p>\n              </p>\n            <div className='input' id=\"officeAdress\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineOurOffice.officeAdress}</div>\n        </div>\n        <div className=\"border\">\n        <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n               </p>\n               <p>\n               1 час\n               </p>\n               </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineOurOffice.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationOfflineOurOffice","import React from 'react'\n\nfunction UseMitingProductPresentationOfflineClientOffice(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Offline. Офис клиента</h1>\n        <div className=\"border\">\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p> \n                Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?\n              </p>\n              </p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineClientOffice.need}</div>\n        </div>\n        <div className=\"border\">\n        <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p><span className='fatty'>Например:</span>\n              </p>\n              <p>\n                1 час\n              </p></p>\n           <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineClientOffice.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationOfflineClientOffice","import React from 'react'\n\nfunction UseMitingProductPresentationOfflineNoMatterWhere(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Offline. Не важно где пройдет встреча</h1>\n        <div className=\"border\">\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineNoMatterWhere.need}</div>\n        </div>\n        <div className=\"border\">\n        <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingProductPresentationOfflineNoMatterWhere.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationOfflineNoMatterWhere","import React from 'react'\n\nfunction UseMitingProductPresentationOnline(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Online</h1>\n        <div className=\"border\">\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.useMitingProductPresentationOnline.need}</div>\n        </div>\n        <div className=\"border\">\n            <p>Напишите какое приложение вы будете использовать для связи с клиентом</p>\n            <p className='example'>\n            <p>\n              <span className='fatty'>Например:</span>\n            </p>\n            <p>\n              Zoom, Google Meet, Skype\n            </p>\n            </p>\n            <div className='input' id=\"communicationApp\" contentEditable=\"true\">{props.useMitingProductPresentationOnline.communicationApp}</div>\n        </div>\n        <div className=\"border\">\n            <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingProductPresentationOnline.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationOnline","import React from 'react'\n\nfunction UseMitingProductPresentationNoMatterWhere(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Назначение встречи. Презентация продукта. Формат встречи не имеет значения</h1>\n        <div className=\"border\">\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.useMitingProductPresentationNoMatterWhere.need}</div>\n        </div>\n        <div className=\"border\">\n        <p>Напишите, сколько времени потребуется на встречу</p>\n            <p className='comment'>\n              <p>\n                <span className='fatty'>Комментарий:</span>\n              </p>\n              <p>\n                Во-первых, это проявление заботы о клиенте. Мы даем ему понять, что переживаем о том, чтобы ему хватило времени выслушать вас, задать вопросы и принять решение. Каждому будет приятен такой подход.\n              <br/>Во-вторых, это важная фраза, позволяющая минимизировать возражение на следующем звонке “Давайте быстрее, у меня не так много времени” или что-то похожее. \n              <br/>Итого, клиент будет предупрежден о том, сколько необходимо выделить времени на встречу с вами, а вы будете иметь достаточно времени, чтобы осуществить продажу.\n              </p>\n\n            </p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>\n                1 час\n              </p>\n              </p>\n            <div className='input' id=\"meetingTime\" contentEditable=\"true\">{props.useMitingProductPresentationNoMatterWhere.meetingTime}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default UseMitingProductPresentationNoMatterWhere","import React from 'react'\n\nfunction SendingCommercialOffer(props) {\n  return (\n    <div className='childRoot'>\n        <h1>Отправка коммерческого предложения здесь и сейчас</h1>\n        <div className='border'>\n            <p>Напишите вопросы, выявляющие потребность, которые нужно задать клиенту, в той последовательности, в которой вы их будете задавать</p>\n            <p className='comment'>\n              <p><span className='fatty'>Комментарий:</span></p>\n              <p>\n                Давайте вспомним основную цель звонка. Она заключается в том, чтобы клиент дал согласие на следующий звонок для презентации продукта. Если не договоримся, возможности продать не будет.\n              </p>\n              <p>\n                Как сделать так, чтобы клиент дал согласие на следующий звонок?\n              </p>\n              <p>\n              Нам нужно продолжить формировать понимание клиента о том, что у нас есть то, что ему нужно. Но есть проблема - мы пока не знаем что ему нужно. Только вопросы помогут нам это понять. \n              <br/>От того, насколько правильные вопросы вы зададите, будет зависеть его представление о вас как о профессионале. Каждый заданный вопрос дает понимание клиенту, что вы знаете специфику и тонкости продукта и, вероятно, сможете подобрать ему именно то, что он ищет. \n              <br/>Также, такой подход дает возможность понять, что вы, действительно, хотите ему помочь, а не втюхать то, что нужно вам. \n              <br/>После правильно заданных вопросов он будет ожидать вашего звонка, потому что понимает, что вероятность того, что вы сможете ему помочь, очень высокая. \n              <br/>Также, мы сразу думаем не только о том, чтобы он поднял трубку в следующий раз, но и о том, чтобы состоялась продажа.\n              </p>\n              <p>\n                Как повысить вероятность продажи?\n              </p>\n              <p>\n                Нужно продавать то, что нужно клиенту и чем больше подобранный продукт отвечает запросу клиента, тем выше вероятность его продажи.\n              </p>\n              <p>\n                Как узнать что хочет клиент?\n              </p>\n              <p>\n                Просто задать ему несколько вопросов и получить нужную информацию, на основе которой будете подбирать продукт и продавать его в следующий раз.\n              </p>\n              <p>\n                Как задать правильные вопросы?\n              </p>\n              <p>\n                Просто задавать те вопросы, без которых подбор продукта невозможен. А для того, чтобы их сформулировать, нужно отталкиваться от тех характеристик, которые являются переменными в вашем продукте. Например, цена, размер, цвет, функциональность и т.д.\n              </p>\n              <p>\n                Получив как можно больше информации, вы сможете подобрать именно то, что хочет клиент и сама продажа будет максимально целевой - вы продаете то, что хочет купить клиент.\n              </p>\n            </p>\n            <p className='example'><p><span className='fatty'>Например:</span></p> Какой транспорт хотите застраховать? На какой срок обычно страхуете транспорт? Какие проблемы обычно возникают при страховании и дальнейшем использовании?</p>\n            <div className='input' id=\"need\" contentEditable=\"true\">{props.sendingCommercialOffer}</div>\n        </div>\n    </div>\n  )\n}\n\nexport default SendingCommercialOffer","import React from 'react'\n\nfunction Finish() {\n  return (\n    <div className='childRoot'>\n        <h1>Завершение</h1>\n        <div className=\"border\">\n            <p>На этом закончим. Напишите, как вы вообще?</p>\n            <p className='example'>\n              <p>\n                <span className='fatty'>Например:</span>\n              </p>\n              <p>Отлично, продуктивно, интересно</p>\n              </p>\n            <div className='input' id=\"finish\" contentEditable=\"true\"></div>\n        </div>\n    </div>\n  )\n}\n\nexport default Finish","import React from 'react'\n\nfunction Bye(props) {\n  return (\n    <div className='noBorder'>\n        <h1>Спасибо, ваш Скрипт собран</h1>\n        <p>Результат придёт на почту <b>{props.mail}</b></p>\n    </div>\n  )\n}\n\nexport default Bye","import React from 'react'\n\nfunction EmptyLine(props) {\n    if (props.empty) {\n        return <p className='emptyIput'>Одно из полей пустое</p>\n    } else {\n        return <p></p>\n    }\n}\n\n\nexport default EmptyLine","import React from 'react'\n\nexport default function Password(props) {\n    if (props.incorrect) {\n    return (\n      <div className='childRoot'>\n      <div className='border'>\n        <p>Пароль</p>\n        <div className='input' typeof='text' id='password' contentEditable=\"true\"></div>\n      </div>\n      <p className='emptyIput'>Пароль не верный</p>\n    </div>\n    )} else {\n      return (\n        <div className='childRoot'>\n        <div className='border'>\n          <p>Пароль</p>\n          <div className='input' typeof='text' id='password' contentEditable=\"true\"></div>\n        </div>\n      </div>\n    )}\n    \n  \n}","import React, { useState} from \"react\";\nimport Favicon from 'react-favicon';\nimport Start from \"./components/Start\";\nimport Mail from \"./components/Mail\";\nimport Welcom from \"./components/Welcom\";\nimport MissionCall from \"./components/MissionCall\";\nimport DefinitionNeed from \"./components/DefinitionNeed\"\nimport SelectionSaleProduct from \"./components/SelectionSaleProduсt\"\nimport UseMiting from \"./components/UseMiting\"\nimport UseMitingPickUp from \"./components/UseMitingPickUp\"\nimport UseMitingPickUpOffline from \"./components/UseMitingPickUpOffline\"\nimport UseMitingPickUpOfflineOurOffice from \"./components/UseMitingPickUpOfflineOurOffice\"\nimport UseMitingPickUpOfflineСlientOffice from \"./components/UseMitingPickUpOfflineСlientOffice\"\nimport UseMitingPickUpOfflineNoMatterWhere from \"./components/UseMitingPickUpOfflineNoMatterWhere\"\nimport UseMitingPickUpOnline from \"./components/UseMitingPickUpOnline\"\nimport UseMitingPickUpNoMatterWhere from \"./components/UseMitingPickUpNoMatterWhere\"\nimport UseMitingProductPresentation from \"./components/UseMitingProductPresentation\"\nimport UseMitingProductPresentationOffline from \"./components/UseMitingProductPresentationOffline\"\nimport UseMitingProductPresentationOfflineOurOffice from \"./components/UseMitingProductPresentationOfflineOurOffice\"\nimport UseMitingProductPresentationOfflineClientOffice from \"./components/UseMitingProductPresentationOfflineClientOffice\"\nimport UseMitingProductPresentationOfflineNoMatterWhere from \"./components/UseMitingProductPresentationOfflineNoMatterWhere\"\nimport UseMitingProductPresentationOnline from \"./components/UseMitingProductPresentationOnline\"\nimport UseMitingProductPresentationNoMatterWhere from \"./components/UseMitingProductPresentationNoMatterWhere\"\nimport SendingCommercialOffer from \"./components/SendingCommercialOffer\"\nimport Finish from \"./components/Finish\"\nimport Bye from \"./components/Bye\";\nimport EmptyLine from \"./components/EmptyLine\"\nimport './styles/App.css';\nimport Password from \"./components/Password\";\n\n\nexport const dataScript = {};\n\nfunction App() {\n  let [state, setState] = useState('password');\n  let [history, setHistory] = useState(['password'])\n  let [further, setFurther] = useState('Далее')\n  let [fillInInput, setfillInInput] = useState(false)\n  let [corPassword, setPassword] = useState(false);\n  let emptyInput = [];\n\n  let [mail, setMail] = useState(\"\");\n  let [welcom, setWelcom] = useState({\n    position: \"\",\n    form: \"\",\n    title: \"\"\n  });\n  let [missionCall, setMissionCall] = useState(\"\");\n  let [definitionNeed, setDefinitionNeed] = useState({\n    need: \"\",\n    readyTime: \"\",\n    meetingTime: \"\",\n  })\n  let [selectionSaleProduсt, setSelectionSaleProduсt] = useState({\n    need: \"\",\n    stagesOfRegistration: \"\",\n  })\n  let [useMitingPickUpOfflineOurOffice, setUseMitingPickUpOfflineOurOffice] = useState({\n    officeAdress: \"\",\n    meetingTime: \"\"\n  })\n  let [useMitingPickUpOfflineСlientOffice, setUseMitingPickUpOfflineСlientOffice] = useState(\"\")\n  let [useMitingPickUpOfflineNoMatterWhere, setUseMitingPickUpOfflineNoMatterWhere] = useState(\"\")\n  let [useMitingPickUpOnline, setUseMitingPickUpOnline] = useState({\n    communicationApp: \"\",\n    meetingTime: \"\",\n  });\n  let [useMitingPickUpNoMatterWhere, setUseMitingPickUpNoMatterWhere] = useState(\"\");\n  let [useMitingProductPresentationOfflineOurOffice, setUseMitingProductPresentationOfflineOurOffice] = useState({\n    need: \"\",\n    officeAdress: \"\",\n    meetingTime: \"\"\n  })\n  let [useMitingProductPresentationOfflineClientOffice, setUseMitingProductPresentationOfflineClientOffice] = useState({\n    need: \"\",\n    meetingTime: \"\"\n  })\n  let [useMitingProductPresentationNoMatterWhere, setUseMitingProductPresentationNoMatterWhere] = useState({\n    need: \"\",\n    meetingTime: \"\"\n  })\n  let [useMitingProductPresentationOnline, setUseMitingProductPresentationOnline] = useState({\n    need: \"\",\n    communicationApp: \"\",\n    meetingTime: \"\"\n  })\n  let [useMitingProductPresentationOfflineNoMatterWhere, setUseMitingProductPresentationOfflineNoMatterWhere] = useState({\n    need: \"\",\n    meetingTime: \"\"\n  })\n  let [sendingCommercialOffer, setSendingCommercialOffer] = useState(\"\")\n\n\n\n\n  function logic() {\n    let emptyIput = pushData()\n    if (emptyIput) {\n      setfillInInput(fillInInput = true)\n      for (let i = 0; i < emptyInput.length; i++) {\n        document.getElementsByName(emptyIput[i]).classList.add = \"emptyIput\";\n      }\n    } else {\n      setfillInInput(fillInInput = false)\n      switch (state) {\n        case 'password':\n          pushData()\n          if (dataScript.password == 1234) {\n            setState(state = 'start');\n            pushHistory(state);\n          } else {\n            setPassword(corPassword = true);\n          }\n          break;\n        case 'start':\n          pushData()\n          setState(state = 'mail');\n          pushHistory(state)\n          break;\n        case 'mail':\n          setState(state = 'welcom');\n          pushHistory(state)\n          break;\n        case 'welcom':\n          setState(state = 'missionCall');\n          pushHistory(state)\n          break;\n        case 'missionCall':\n          if (dataScript.mission === 'Выявление потребностей (перед звонком с презентацией продукта)') {\n            setState(state = 'definitionNeed');\n          } else if (dataScript.mission === 'Подбор и продажа продукта (здесь и сейчас)') {\n            setState(state = 'selectionSaleProduct');\n          } else if (dataScript.mission === 'Назначение встречи (знакомство или презентация продукта)') {\n            setState(state = 'useMiting');\n          } else if (dataScript.mission === 'Отправка коммерческого предложения (здесь и сейчас)') {\n            setState(state = 'sendingCommercialOffer');\n          }\n          pushHistory(state)\n          break;\n\n        case 'useMiting':\n          if (dataScript.aimMeeteng === 'Знакомство') {\n            setState(state = 'useMitingPickUp');\n          } else if (dataScript.aimMeeteng === 'Презентация продукта') {\n            setState(state = 'useMitingProductPresentation');\n          }\n          pushHistory(state)\n          break;\n\n        case 'useMitingProductPresentation':\n          if (dataScript.meetingFormat === 'Offline') {\n            setState(state = 'useMitingProductPresentationOffline');\n          } else if (dataScript.meetingFormat === 'Online') {\n            setState(state = 'useMitingProductPresentationOnline')\n          } else if (dataScript.meetingFormat === 'Формат встречи не имеет значения') {\n            setState(state = 'useMitingProductPresentationNoMatterWhere')\n          }\n          pushHistory(state)\n          break;\n\n        case 'useMitingProductPresentationOffline':\n          if (dataScript.meetingOption === 'Наш офис') {\n            setState(state = 'useMitingProductPresentationOfflineOurOffice');\n          } else if (dataScript.meetingOption === 'Офис клиента') {\n            setState(state = 'useMitingProductPresentationOfflineClientOffice')\n          } else if (dataScript.meetingOption === 'Не важно где пройдёт встреча') {\n            setState(state = 'useMitingProductPresentationOfflineNoMatterWhere')\n          }\n          pushHistory(state)\n          break;\n\n        case 'useMitingPickUp':\n          if (dataScript.meetingFormat === 'Offline') {\n            setState(state = 'useMitingPickUpOffline');\n          } else if (dataScript.meetingFormat === 'Online') {\n            setState(state = 'useMitingPickUpOnline');\n          } else if (dataScript.meetingFormat === 'Формат встречи не имеет значения') {\n            setState(state = 'useMitingPickUpNoMatterWhere');\n          }\n          pushHistory(state)\n          break;\n\n        case 'useMitingPickUpOffline':\n          if (dataScript.meetingOption === 'Наш офис') {\n            setState(state = 'useMitingPickUpOfflineOurOffice');\n          } else if (dataScript.meetingOption === 'Офис клиента') {\n            setState(state = 'useMitingPickUpOfflineСlientOffice');\n          } else if (dataScript.meetingOption === 'Не важно где пройдёт встреча') {\n            setState(state = 'useMitingPickUpOfflineNoMatterWhere');\n          }\n          pushHistory(state)\n          break;\n\n        case 'finish':\n          setState(state = 'bye')\n          setState('bye')\n          delBtn()\n          sendDataScript()\n          break;\n\n        default:\n          setState(state = 'finish')\n          setFurther(further = 'Завершить')\n          pushHistory()\n      }\n      window.scrollTo(0, 0);\n    }\n    // console.log(state)\n    // console.log(history);\n    // console.log(dataScript);\n\n  }\n\n  function createElements() {\n    switch (state) {\n      case 'password':\n        return <Password incorrect={corPassword} />\n      case 'start':\n        return <Start />;\n      case 'mail':\n        return <Mail mail={mail} />;\n      case 'welcom':\n        return <Welcom welcom={welcom} />;\n      case 'missionCall':\n        return <MissionCall missionCall={missionCall} />;\n      case 'definitionNeed':\n        dataScript.sample = 'definitionNeed';\n        return <DefinitionNeed definitionNeed={definitionNeed} />;\n      case 'selectionSaleProduct':\n        dataScript.sample = 'selectionSaleProduct';\n        return <SelectionSaleProduct selectionSaleProduct={selectionSaleProduсt} />;\n      case 'useMiting':\n        return <UseMiting />;\n      case 'useMitingPickUp':\n        return <UseMitingPickUp />;\n      case 'useMitingPickUpOffline':\n        return <UseMitingPickUpOffline />;\n      case 'useMitingPickUpOfflineOurOffice':\n        dataScript.sample = 'useMitingPickUpOfflineOurOffice';\n        return <UseMitingPickUpOfflineOurOffice useMitingPickUpOfflineOurOffice={useMitingPickUpOfflineOurOffice} />;\n      case 'useMitingPickUpOfflineСlientOffice':\n        dataScript.sample = 'useMitingPickUpOfflineСlientOffice';\n        return <UseMitingPickUpOfflineСlientOffice useMitingPickUpOfflineСlientOffice={useMitingPickUpOfflineСlientOffice} />;\n      case 'useMitingPickUpOfflineNoMatterWhere':\n        dataScript.sample = 'useMitingPickUpOfflineNoMatterWhere';\n        return <UseMitingPickUpOfflineNoMatterWhere useMitingPickUpOfflineNoMatterWhere={useMitingPickUpOfflineNoMatterWhere} />;\n      case 'useMitingPickUpOnline':\n        dataScript.sample = 'useMitingPickUpOnline';\n        return <UseMitingPickUpOnline useMitingPickUpOnline={useMitingPickUpOnline} />;\n      case 'useMitingPickUpNoMatterWhere':\n        dataScript.sample = 'useMitingPickUpNoMatterWhere';\n        return <UseMitingPickUpNoMatterWhere useMitingPickUpNoMatterWhere={useMitingPickUpNoMatterWhere} />;\n      case 'useMitingProductPresentation':\n        return <UseMitingProductPresentation />;\n      case 'useMitingProductPresentationOffline':\n        return <UseMitingProductPresentationOffline />;\n      case 'useMitingProductPresentationOfflineOurOffice':\n        dataScript.sample = 'useMitingProductPresentationOfflineOurOffice'\n        return <UseMitingProductPresentationOfflineOurOffice useMitingProductPresentationOfflineOurOffice={useMitingProductPresentationOfflineOurOffice} />;\n      case 'useMitingProductPresentationOfflineClientOffice':\n        dataScript.sample = 'useMitingProductPresentationOfflineClientOffice';\n        return <UseMitingProductPresentationOfflineClientOffice useMitingProductPresentationOfflineClientOffice={useMitingProductPresentationOfflineClientOffice} />;\n      case 'useMitingProductPresentationOfflineNoMatterWhere':\n        dataScript.sample = 'useMitingProductPresentationOfflineNoMatterWhere';\n        return <UseMitingProductPresentationOfflineNoMatterWhere useMitingProductPresentationOfflineNoMatterWhere={useMitingProductPresentationOfflineNoMatterWhere} />;\n      case 'useMitingProductPresentationOnline':\n        dataScript.sample = 'useMitingProductPresentationOnline';\n        return <UseMitingProductPresentationOnline useMitingProductPresentationOnline={useMitingProductPresentationOnline} />;\n      case 'useMitingProductPresentationNoMatterWhere':\n        dataScript.sample = 'useMitingProductPresentationNoMatterWhere';\n        return <UseMitingProductPresentationNoMatterWhere useMitingProductPresentationNoMatterWhere={useMitingProductPresentationNoMatterWhere} />;\n      case 'sendingCommercialOffer':\n        dataScript.sample = 'sendingCommercialOffer';\n        return <SendingCommercialOffer sendingCommercialOffer={sendingCommercialOffer} />;\n      case 'finish':\n        return <Finish />;\n      case 'bye':\n        return <Bye mail={dataScript.mail} />;\n      default:\n        console.log('Simple empty - error!')\n    }\n  }\n\n  function pushHistory(name) {\n    let copy = Object.assign([], history);\n    copy.push(name)\n    setHistory(copy)\n  }\n\n  function back() {\n    if (state !== 'start' && state !== 'password') {\n      let copy = Object.assign([], history);\n      if (copy[copy.length - 1] !== 'finish') {\n        setFurther(further = 'Далее');\n      }\n      setState(state = copy[copy.length - 2]);\n      copy.pop()\n      setHistory(copy)\n      setfillInInput(fillInInput = false)\n      window.scrollTo(0, 0);\n    }\n    \n  }\n\n  function pushData() {\n    let empty = false\n    let inputDiv = document.querySelectorAll('.input')\n\n    for (let i = 0; i < inputDiv.length; i++) {\n      dataScript[inputDiv[i].id] = inputDiv[i].innerText\n      if (dataScript[inputDiv[i].id] == '') {\n        empty = true\n      }\n    }\n\n    let inputArr = document.querySelectorAll('input')\n    for (let i = 0; i < inputArr.length; i++) {\n      if (inputArr[i].checked) {\n        dataScript[inputArr[i].name] = inputArr[i].value\n      }\n    }\n    monitoringState();\n\n    return empty;\n  }\n\n  function monitoringState() {\n    switch (state) {\n      case 'mail':\n        setMail(mail = dataScript.mail);\n        break;\n      case 'welcom':\n        setWelcom({\n          position: dataScript.position,\n          form: dataScript.form,\n          title: dataScript.title\n        });\n        break;\n      case 'missionCall':\n        setMissionCall(missionCall = dataScript.activity);\n        break;\n      case 'definitionNeed':\n        setDefinitionNeed({\n          need: dataScript.need,\n          readyTime: dataScript.readyTime,\n          meetingTime: dataScript.meetingTime,\n        })\n        break;\n      case 'selectionSaleProduct':\n        setSelectionSaleProduсt({\n          need: dataScript.need,\n          stagesOfRegistration: dataScript.stagesOfRegistration\n        })\n      case 'useMitingPickUpOfflineOurOffice':\n        setUseMitingPickUpOfflineOurOffice({\n          officeAdress: dataScript.officeAdress,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'useMitingPickUpOfflineСlientOffice':\n        setUseMitingPickUpOfflineСlientOffice(useMitingPickUpOfflineСlientOffice = dataScript.meetingTime);\n        break;\n      case 'useMitingPickUpOfflineNoMatterWhere':\n        setUseMitingPickUpOfflineNoMatterWhere(useMitingPickUpOfflineNoMatterWhere = dataScript.meetingTime)\n        break;\n      case 'useMitingPickUpOnline':\n        setUseMitingPickUpOnline({\n          communicationApp: dataScript.communicationApp,\n          meetingTime: dataScript.meetingTime,\n        })\n        break;\n      case 'useMitingPickUpNoMatterWhere':\n        setUseMitingPickUpNoMatterWhere(useMitingPickUpNoMatterWhere = dataScript.meetingTime);\n        break;\n      case 'useMitingProductPresentationOfflineOurOffice':\n        setUseMitingProductPresentationOfflineOurOffice({\n          need: dataScript.need,\n          officeAdress: dataScript.officeAdress,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'useMitingProductPresentationOfflineClientOffice':\n        setUseMitingProductPresentationOfflineClientOffice({\n          need: dataScript.need,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'useMitingProductPresentationNoMatterWhere':\n        setUseMitingProductPresentationNoMatterWhere({\n          need: dataScript.need,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'useMitingProductPresentationOnline':\n        setUseMitingProductPresentationOnline({\n          need: dataScript.need,\n          communicationApp: dataScript.communicationApp,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'useMitingProductPresentationOfflineNoMatterWhere':\n        setUseMitingProductPresentationOfflineNoMatterWhere({\n          need: dataScript.need,\n          meetingTime: dataScript.meetingTime\n        })\n        break;\n      case 'sendingCommercialOffer':\n        setSendingCommercialOffer(sendingCommercialOffer = dataScript.need)\n        break\n    }\n  }\n\n\n  function delBtn() {\n    let btn = document.querySelector(\".btn\")\n    while (btn.firstChild) {\n      btn.removeChild(btn.firstChild);\n    }\n  }\n\n  function sendDataScript() {\n    console.log(dataScript);\n    let response = fetch('/dataScript', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(dataScript)\n    });\n\n\n  }\n\n  return (\n    <div>\n      <Favicon url='favicon.ico'/>\n      {createElements()}\n      <EmptyLine empty={fillInInput} />\n      <div className=\"btn\">\n        <button onClick={back}>Назад</button>\n        <button onClick={logic}>{further}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}